<!-- Launches Kobuki Gazebo simulation in an empty world -->
<launch>
  <!-- start Gazebo with an empty world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="use_sim_time" value="true"/>
    <arg name="debug" value="false"/>
    <arg name="world_name" value="$(find kobuki_2dnav_sim)/worlds/a.world"/>
  </include>
  
  <!-- spawn the robot -->
  <include file="$(find kobuki_2dnav_sim)/launch/includes/robot_stereo.launch.xml"/>

  <node pkg="stereo_image_proc" type="stereo_image_proc" respawn="false" name="stereo_image_proc" output="screen">
    
  </node>
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

  <!-- Run a passthrough filter to clean NaNs -->
  <node pkg="nodelet" type="nodelet" name="passthrough" args="load pcl/PassThrough pcl_manager" output="screen">
    <remap from="~input" to="points2" />
    <remap from="~output" to="points2_out" />
    
    <rosparam>
      filter_field_name: y
      filter_limit_min: -0.40
      filter_limit_max: 0.40
      filter_limit_negative: False
    </rosparam>
  </node>

  <arg name="yolo_weights_path"          default="$(find darknet_ros)/yolo_network_config/weights"/>
  <arg name="yolo_config_path"           default="$(find darknet_ros)/yolo_network_config/cfg"/>

  <!-- Load parameters -->
  <rosparam command="load" ns="darknet_ros" file="$(find darknet_ros)/config/ros.yaml"/>
  <rosparam command="load" ns="darknet_ros" file="$(find darknet_ros)/test/yolov2.yaml"/>

  <!-- Start darknet and ros wrapper -->
  <node pkg="darknet_ros" type="darknet_ros" name="darknet_ros" output="screen">
    <param name="weights_path"          value="$(arg yolo_weights_path)" />
    <param name="config_path"           value="$(arg yolo_config_path)" />
    <remap from="/camera/rgb/image_raw" to="/left/image_color" />
  </node>

  <test pkg="darknet_ros" test-name="darknet_ros_object_detection" type="darknet_ros_object_detection-test" time-limit="500.0"/>
    <!-- nav stack -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find kobuki_2dnav_sim)/param/costmap_common_params_pc.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find kobuki_2dnav_sim)/param/costmap_common_params_pc.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find kobuki_2dnav_sim)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find kobuki_2dnav_sim)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find kobuki_2dnav_sim)/param/base_local_planner_params.yaml" command="load" />
    <remap from="/cmd_vel" to="/mobile_base/commands/velocity" />
  </node>
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find kobuki_2dnav_sim)/nav.rviz" />
</launch>